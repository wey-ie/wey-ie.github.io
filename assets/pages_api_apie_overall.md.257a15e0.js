import{_ as o,o as a,c as t,V as e}from"./chunks/framework.113ddbb1.js";const k=JSON.parse('{"title":"子程序 - 全局","description":"","frontmatter":{},"headers":[],"relativePath":"pages/api/apie/overall.md"}'),r={name:"pages/api/apie/overall.md"},l=e('<h1 id="子程序-全局" tabindex="-1">子程序 - 全局 <a class="header-anchor" href="#子程序-全局" aria-label="Permalink to &quot;子程序 - 全局&quot;">​</a></h1><p>本篇介绍库易语言模块中的全局命令子程序。</p><blockquote><h3 id="jo-init" tabindex="-1"><strong>Jo_Init</strong> <a class="header-anchor" href="#jo-init" aria-label="Permalink to &quot;**Jo_Init**&quot;">​</a></h3><p>初始化引擎</p></blockquote><blockquote><h3 id="jo-uninit" tabindex="-1"><strong>Jo_UnInit</strong> <a class="header-anchor" href="#jo-uninit" aria-label="Permalink to &quot;**Jo_UnInit**&quot;">​</a></h3><p>卸载引擎</p></blockquote><blockquote><h3 id="jo-wndmsgloop" tabindex="-1"><strong>Jo_WndMsgLoop</strong> <a class="header-anchor" href="#jo-wndmsgloop" aria-label="Permalink to &quot;**Jo_WndMsgLoop**&quot;">​</a></h3><p>窗口消息循环</p></blockquote><blockquote><h3 id="jo-getdpi" tabindex="-1"><strong>Jo_Getdpi</strong> <a class="header-anchor" href="#jo-getdpi" aria-label="Permalink to &quot;**Jo_Getdpi**&quot;">​</a></h3><p>获取系统DPI</p></blockquote><blockquote><h3 id="jo-设置光标自文件" tabindex="-1"><strong>Jo_设置光标自文件</strong> <a class="header-anchor" href="#jo-设置光标自文件" aria-label="Permalink to &quot;**Jo_设置光标自文件**&quot;">​</a></h3><p>从文件加载并设置鼠标光标</p></blockquote><blockquote><h3 id="jo-提示" tabindex="-1"><strong>Jo_提示</strong> <a class="header-anchor" href="#jo-提示" aria-label="Permalink to &quot;**Jo_提示**&quot;">​</a></h3><p>弹出提示框</p></blockquote><blockquote><h3 id="jo-信息框" tabindex="-1"><strong>Jo_信息框</strong> <a class="header-anchor" href="#jo-信息框" aria-label="Permalink to &quot;**Jo_信息框**&quot;">​</a></h3><p>弹出信息框</p></blockquote><blockquote><h3 id="jo-延时" tabindex="-1"><strong>Jo_延时</strong> <a class="header-anchor" href="#jo-延时" aria-label="Permalink to &quot;**Jo_延时**&quot;">​</a></h3><p>延时</p></blockquote><blockquote><h3 id="jo-注册xml事件" tabindex="-1"><strong>Jo_注册XML事件</strong> <a class="header-anchor" href="#jo-注册xml事件" aria-label="Permalink to &quot;**Jo_注册XML事件**&quot;">​</a></h3><p>注册从XML布局创建的对象的事件回调</p></blockquote><blockquote><h3 id="argb" tabindex="-1"><strong>ARGB</strong> <a class="header-anchor" href="#argb" aria-label="Permalink to &quot;**ARGB**&quot;">​</a></h3><p>将ARGB分量转换为ARGB颜色值</p></blockquote><blockquote><h3 id="getargb" tabindex="-1"><strong>GetARGB</strong> <a class="header-anchor" href="#getargb" aria-label="Permalink to &quot;**GetARGB**&quot;">​</a></h3><p>取ARGB颜色值的ARGB分量</p></blockquote><blockquote><h3 id="getrgb" tabindex="-1"><strong>GetRGB</strong> <a class="header-anchor" href="#getrgb" aria-label="Permalink to &quot;**GetRGB**&quot;">​</a></h3><p>取RGB颜色值的RGB分量</p></blockquote><blockquote><h3 id="huetorgb" tabindex="-1"><strong>HueToRGB</strong> <a class="header-anchor" href="#huetorgb" aria-label="Permalink to &quot;**HueToRGB**&quot;">​</a></h3><p>将Hue分量转换为RGB颜色值</p></blockquote><blockquote><h3 id="bin-len" tabindex="-1"><strong>Bin_Len</strong> <a class="header-anchor" href="#bin-len" aria-label="Permalink to &quot;**Bin_Len**&quot;">​</a></h3><p>取字节集长度</p></blockquote><blockquote><h3 id="copybin" tabindex="-1"><strong>Copybin</strong> <a class="header-anchor" href="#copybin" aria-label="Permalink to &quot;**Copybin**&quot;">​</a></h3><p>拷贝内存字节集</p></blockquote><blockquote><h3 id="f2i" tabindex="-1"><strong>F2I</strong> <a class="header-anchor" href="#f2i" aria-label="Permalink to &quot;**F2I**&quot;">​</a></h3><p>取小数指针</p></blockquote><blockquote><h3 id="int-not" tabindex="-1"><strong>Int_Not</strong> <a class="header-anchor" href="#int-not" aria-label="Permalink to &quot;**Int_Not**&quot;">​</a></h3><p>位取反</p></blockquote><blockquote><h3 id="call" tabindex="-1"><strong>Call</strong> <a class="header-anchor" href="#call" aria-label="Permalink to &quot;**Call**&quot;">​</a></h3><p>汇编调用dll命令（10参数）</p></blockquote><blockquote><h3 id="call-15" tabindex="-1"><strong>Call_15</strong> <a class="header-anchor" href="#call-15" aria-label="Permalink to &quot;**Call_15**&quot;">​</a></h3><p>汇编调用dll命令（15参数）</p></blockquote><blockquote><h3 id="call-20" tabindex="-1"><strong>Call_20</strong> <a class="header-anchor" href="#call-20" aria-label="Permalink to &quot;**Call_20**&quot;">​</a></h3><p>汇编调用dll命令（20参数）</p></blockquote><blockquote><h3 id="jo-getatom" tabindex="-1"><strong>Jo_GetAtom</strong> <a class="header-anchor" href="#jo-getatom" aria-label="Permalink to &quot;**Jo_GetAtom**&quot;">​</a></h3><p>取原子号</p></blockquote><blockquote><h3 id="makercf" tabindex="-1"><strong>MakeRCF</strong> <a class="header-anchor" href="#makercf" aria-label="Permalink to &quot;**MakeRCF**&quot;">​</a></h3><p>分量转RectF（小数型矩形）</p></blockquote><blockquote><h3 id="offsetrect" tabindex="-1"><strong>OffsetRect</strong> <a class="header-anchor" href="#offsetrect" aria-label="Permalink to &quot;**OffsetRect**&quot;">​</a></h3><p>矩形偏移</p></blockquote><blockquote><h3 id="point" tabindex="-1"><strong>Point</strong> <a class="header-anchor" href="#point" aria-label="Permalink to &quot;**Point**&quot;">​</a></h3><p>坐标分量转Point</p></blockquote><blockquote><h3 id="pointf" tabindex="-1"><strong>PointF</strong> <a class="header-anchor" href="#pointf" aria-label="Permalink to &quot;**PointF**&quot;">​</a></h3><p>坐标分量转PointF</p></blockquote><blockquote><h3 id="ptinrect" tabindex="-1"><strong>PtInRect</strong> <a class="header-anchor" href="#ptinrect" aria-label="Permalink to &quot;**PtInRect**&quot;">​</a></h3><p>坐标比对，判断坐标是否在矩形区域内</p></blockquote><blockquote><h3 id="ptinrectf" tabindex="-1"><strong>PtInRectF</strong> <a class="header-anchor" href="#ptinrectf" aria-label="Permalink to &quot;**PtInRectF**&quot;">​</a></h3><p>坐标比对，判断坐标是否在小数型矩形区域内</p></blockquote><blockquote><h3 id="ptinrtf" tabindex="-1"><strong>PtInRtF</strong> <a class="header-anchor" href="#ptinrtf" aria-label="Permalink to &quot;**PtInRtF**&quot;">​</a></h3><p>偏移坐标比对，在计算滚动条偏移的前提下判断坐标是否在小数型矩形区域内</p></blockquote><blockquote><h3 id="ptinrtl" tabindex="-1"><strong>PtInRtL</strong> <a class="header-anchor" href="#ptinrtl" aria-label="Permalink to &quot;**PtInRtL**&quot;">​</a></h3><p>偏移坐标比对，在计算滚动条偏移的前提下判断坐标是否在矩形区域内</p></blockquote><blockquote><h3 id="rc2rcf" tabindex="-1"><strong>RC2RCF</strong> <a class="header-anchor" href="#rc2rcf" aria-label="Permalink to &quot;**RC2RCF**&quot;">​</a></h3><p>整数型矩形转小数型矩形</p></blockquote><blockquote><h3 id="rc2rcl" tabindex="-1"><strong>RC2RCL</strong> <a class="header-anchor" href="#rc2rcl" aria-label="Permalink to &quot;**RC2RCL**&quot;">​</a></h3><p>整数型矩形转长整数型矩形</p></blockquote><blockquote><h3 id="rcf2rc" tabindex="-1"><strong>RCF2RC</strong> <a class="header-anchor" href="#rcf2rc" aria-label="Permalink to &quot;**RCF2RC**&quot;">​</a></h3><p>小数型矩形转RectW</p></blockquote><blockquote><h3 id="rcl2rc" tabindex="-1"><strong>RCL2RC</strong> <a class="header-anchor" href="#rcl2rc" aria-label="Permalink to &quot;**RCL2RC**&quot;">​</a></h3><p>长整数型矩形转整数型矩形</p></blockquote><blockquote><h3 id="rect" tabindex="-1"><strong>Rect</strong> <a class="header-anchor" href="#rect" aria-label="Permalink to &quot;**Rect**&quot;">​</a></h3><p>矩形分量转Rect</p></blockquote><blockquote><h3 id="rectf" tabindex="-1"><strong>RectF</strong> <a class="header-anchor" href="#rectf" aria-label="Permalink to &quot;**RectF**&quot;">​</a></h3><p>矩形分量转RectF</p></blockquote><blockquote><h3 id="rectl" tabindex="-1"><strong>RectL</strong> <a class="header-anchor" href="#rectl" aria-label="Permalink to &quot;**RectL**&quot;">​</a></h3><p>矩形分量转RectL</p></blockquote><blockquote><h3 id="rectw" tabindex="-1"><strong>RectW</strong> <a class="header-anchor" href="#rectw" aria-label="Permalink to &quot;**RectW**&quot;">​</a></h3><p>矩形分量转RectW</p></blockquote><blockquote><h3 id="rgb2argb" tabindex="-1"><strong>RGB2ARGB</strong> <a class="header-anchor" href="#rgb2argb" aria-label="Permalink to &quot;**RGB2ARGB**&quot;">​</a></h3><p>将RGB颜色值转ARGB颜色值</p></blockquote><blockquote><h3 id="rgba" tabindex="-1"><strong>RGBA</strong> <a class="header-anchor" href="#rgba" aria-label="Permalink to &quot;**RGBA**&quot;">​</a></h3><p>将RGBA分量转RGBA颜色值</p></blockquote><blockquote><h3 id="setrectf" tabindex="-1"><strong>SETRECTF</strong> <a class="header-anchor" href="#setrectf" aria-label="Permalink to &quot;**SETRECTF**&quot;">​</a></h3><p>以两个坐标为对角计算并转为小数型矩形</p></blockquote><blockquote><h3 id="size" tabindex="-1"><strong>Size</strong> <a class="header-anchor" href="#size" aria-label="Permalink to &quot;**Size**&quot;">​</a></h3><p>将宽高分量转为Size</p></blockquote><blockquote><h3 id="stringptr" tabindex="-1"><strong>StringPtr</strong> <a class="header-anchor" href="#stringptr" aria-label="Permalink to &quot;**StringPtr**&quot;">​</a></h3><p>取字符串地址</p></blockquote><blockquote><h3 id="subptr" tabindex="-1"><strong>SubPtr</strong> <a class="header-anchor" href="#subptr" aria-label="Permalink to &quot;**SubPtr**&quot;">​</a></h3><p>取子程序地址</p></blockquote><blockquote><h3 id="temprectf" tabindex="-1"><strong>TempRECTF</strong> <a class="header-anchor" href="#temprectf" aria-label="Permalink to &quot;**TempRECTF**&quot;">​</a></h3><p>偏移RectF</p></blockquote><blockquote><h3 id="拆分矩形f" tabindex="-1"><strong>拆分矩形F</strong> <a class="header-anchor" href="#拆分矩形f" aria-label="Permalink to &quot;**拆分矩形F**&quot;">​</a></h3><p>取小数型矩形坐标宽高</p></blockquote><blockquote><h3 id="拆分矩形l" tabindex="-1"><strong>拆分矩形L</strong> <a class="header-anchor" href="#拆分矩形l" aria-label="Permalink to &quot;**拆分矩形L**&quot;">​</a></h3><p>取RectL坐标宽高</p></blockquote><blockquote><h3 id="创建目录w" tabindex="-1"><strong>创建目录W</strong> <a class="header-anchor" href="#创建目录w" aria-label="Permalink to &quot;**创建目录W**&quot;">​</a></h3><p>使用宽字符串创建目录</p></blockquote><blockquote><h3 id="创建配置项w" tabindex="-1"><strong>创建配置项W</strong> <a class="header-anchor" href="#创建配置项w" aria-label="Permalink to &quot;**创建配置项W**&quot;">​</a></h3><p>使用宽字符串创建配置文件</p></blockquote><blockquote><h3 id="打开w" tabindex="-1"><strong>打开W</strong> <a class="header-anchor" href="#打开w" aria-label="Permalink to &quot;**打开W**&quot;">​</a></h3><p>使用宽字符串打开文件</p></blockquote><blockquote><h3 id="调用子程序" tabindex="-1"><strong>调用子程序_</strong> <a class="header-anchor" href="#调用子程序" aria-label="Permalink to &quot;**调用子程序_**&quot;">​</a></h3><p>使用子程序指针地址调用子程序</p></blockquote><blockquote><h3 id="调用子程序-数组" tabindex="-1"><strong>调用子程序_数组</strong> <a class="header-anchor" href="#调用子程序-数组" aria-label="Permalink to &quot;**调用子程序_数组**&quot;">​</a></h3><p>使用子程序指针地址调用带数组参数的子程序</p></blockquote><blockquote><h3 id="读配置项w" tabindex="-1"><strong>读配置项W</strong> <a class="header-anchor" href="#读配置项w" aria-label="Permalink to &quot;**读配置项W**&quot;">​</a></h3><p>使用宽字符串读取配置文件</p></blockquote><blockquote><h3 id="读入文件w" tabindex="-1"><strong>读入文件W</strong> <a class="header-anchor" href="#读入文件w" aria-label="Permalink to &quot;**读入文件W**&quot;">​</a></h3><p>使用宽字符串读入文件</p></blockquote><blockquote><h3 id="对话框-保存文件w" tabindex="-1"><strong>对话框_保存文件W</strong> <a class="header-anchor" href="#对话框-保存文件w" aria-label="Permalink to &quot;**对话框_保存文件W**&quot;">​</a></h3><p>使用宽字符串打开一个用于保存文件的对话框</p></blockquote><blockquote><h3 id="对话框-打开文件w" tabindex="-1"><strong>对话框_打开文件W</strong> <a class="header-anchor" href="#对话框-打开文件w" aria-label="Permalink to &quot;**对话框_打开文件W**&quot;">​</a></h3><p>使用宽字符串打开一个用于打开文件的对话框</p></blockquote><blockquote><h3 id="对话框-浏览文件夹w" tabindex="-1"><strong>对话框_浏览文件夹W</strong> <a class="header-anchor" href="#对话框-浏览文件夹w" aria-label="Permalink to &quot;**对话框_浏览文件夹W**&quot;">​</a></h3><p>使用宽字符串打开一个用于选择目录的对话框</p></blockquote><blockquote><h3 id="复制文件w" tabindex="-1"><strong>复制文件W</strong> <a class="header-anchor" href="#复制文件w" aria-label="Permalink to &quot;**复制文件W**&quot;">​</a></h3><p>使用宽字符串拷贝一个文件</p></blockquote><blockquote><h3 id="合并宽字符" tabindex="-1"><strong>合并宽字符</strong> <a class="header-anchor" href="#合并宽字符" aria-label="Permalink to &quot;**合并宽字符**&quot;">​</a></h3><p>将多个宽字符串合并为一个</p></blockquote><blockquote><h3 id="环境变量路径转绝对路径w" tabindex="-1"><strong>环境变量路径转绝对路径W</strong> <a class="header-anchor" href="#环境变量路径转绝对路径w" aria-label="Permalink to &quot;**环境变量路径转绝对路径W**&quot;">​</a></h3><p>将环境变量的相对引用路径转为绝对路径</p></blockquote><blockquote><h3 id="进位整数" tabindex="-1"><strong>进位整数</strong> <a class="header-anchor" href="#进位整数" aria-label="Permalink to &quot;**进位整数**&quot;">​</a></h3><p>将小数余数进位转为整数</p></blockquote><blockquote><h3 id="空尺寸l" tabindex="-1"><strong>空尺寸L</strong> <a class="header-anchor" href="#空尺寸l" aria-label="Permalink to &quot;**空尺寸L**&quot;">​</a></h3><p>判断Size是否为空</p></blockquote><blockquote><h3 id="空矩形f" tabindex="-1"><strong>空矩形F</strong> <a class="header-anchor" href="#空矩形f" aria-label="Permalink to &quot;**空矩形F**&quot;">​</a></h3><p>判断RectF是否为空</p></blockquote><blockquote><h3 id="空矩形l" tabindex="-1"><strong>空矩形L</strong> <a class="header-anchor" href="#空矩形l" aria-label="Permalink to &quot;**空矩形L**&quot;">​</a></h3><p>判断RectL是否为空</p></blockquote><blockquote><h3 id="空矩形w" tabindex="-1"><strong>空矩形W</strong> <a class="header-anchor" href="#空矩形w" aria-label="Permalink to &quot;**空矩形W**&quot;">​</a></h3><p>判断RECT是否为空</p></blockquote><blockquote><h3 id="路径取扩展名w" tabindex="-1"><strong>路径取扩展名W</strong> <a class="header-anchor" href="#路径取扩展名w" aria-label="Permalink to &quot;**路径取扩展名W**&quot;">​</a></h3><p>使用宽字符串取一个文件路径的扩展名</p></blockquote><blockquote><h3 id="路径取目录w" tabindex="-1"><strong>路径取目录W</strong> <a class="header-anchor" href="#路径取目录w" aria-label="Permalink to &quot;**路径取目录W**&quot;">​</a></h3><p>使用宽字符串取一个文件路径的目录部分</p></blockquote><blockquote><h3 id="路径取文件名w" tabindex="-1"><strong>路径取文件名W</strong> <a class="header-anchor" href="#路径取文件名w" aria-label="Permalink to &quot;**路径取文件名W**&quot;">​</a></h3><p>使用宽字符串取一个文件路径的文件名</p></blockquote><blockquote><h3 id="目录是否存在w" tabindex="-1"><strong>目录是否存在W</strong> <a class="header-anchor" href="#目录是否存在w" aria-label="Permalink to &quot;**目录是否存在W**&quot;">​</a></h3><p>使用宽字符串判断一个目录是否存在</p></blockquote><blockquote><h3 id="取变量数据地址" tabindex="-1"><strong>取变量数据地址_</strong> <a class="header-anchor" href="#取变量数据地址" aria-label="Permalink to &quot;**取变量数据地址_**&quot;">​</a></h3><p>取存放变量的内存地址</p></blockquote><blockquote><h3 id="取低位" tabindex="-1"><strong>取低位</strong> <a class="header-anchor" href="#取低位" aria-label="Permalink to &quot;**取低位**&quot;">​</a></h3><p>取数据低位</p></blockquote><blockquote><h3 id="取低位-短整数" tabindex="-1"><strong>取低位_短整数</strong> <a class="header-anchor" href="#取低位-短整数" aria-label="Permalink to &quot;**取低位_短整数**&quot;">​</a></h3><p>取数据低位</p></blockquote><blockquote><h3 id="取高位" tabindex="-1"><strong>取高位</strong> <a class="header-anchor" href="#取高位" aria-label="Permalink to &quot;**取高位**&quot;">​</a></h3><p>取数据高位</p></blockquote><blockquote><h3 id="取高位-短整数" tabindex="-1"><strong>取高位_短整数</strong> <a class="header-anchor" href="#取高位-短整数" aria-label="Permalink to &quot;**取高位_短整数**&quot;">​</a></h3><p>取数据高位</p></blockquote><blockquote><h3 id="取剪辑板文本w" tabindex="-1"><strong>取剪辑板文本W</strong> <a class="header-anchor" href="#取剪辑板文本w" aria-label="Permalink to &quot;**取剪辑板文本W**&quot;">​</a></h3><p>取当前剪切板文本</p></blockquote><blockquote><h3 id="取内存尺寸" tabindex="-1"><strong>取内存尺寸_</strong> <a class="header-anchor" href="#取内存尺寸" aria-label="Permalink to &quot;**取内存尺寸_**&quot;">​</a></h3><p>取内存地址的大小</p></blockquote><blockquote><h3 id="取碰撞矩形" tabindex="-1"><strong>取碰撞矩形</strong> <a class="header-anchor" href="#取碰撞矩形" aria-label="Permalink to &quot;**取碰撞矩形**&quot;">​</a></h3><p>取两个矩形相交部分的矩形</p></blockquote><blockquote><h3 id="取数据-通用型" tabindex="-1"><strong>取数据_通用型</strong> <a class="header-anchor" href="#取数据-通用型" aria-label="Permalink to &quot;**取数据_通用型**&quot;">​</a></h3><p>取数据地址</p></blockquote><blockquote><h3 id="取随机数" tabindex="-1"><strong>取随机数_</strong> <a class="header-anchor" href="#取随机数" aria-label="Permalink to &quot;**取随机数_**&quot;">​</a></h3><p>生成一个随机数</p></blockquote><blockquote><h3 id="取特殊目录w" tabindex="-1"><strong>取特殊目录W</strong> <a class="header-anchor" href="#取特殊目录w" aria-label="Permalink to &quot;**取特殊目录W**&quot;">​</a></h3><p>取特定位置目录</p></blockquote><blockquote><h3 id="取文件尺寸w" tabindex="-1"><strong>取文件尺寸W</strong> <a class="header-anchor" href="#取文件尺寸w" aria-label="Permalink to &quot;**取文件尺寸W**&quot;">​</a></h3><p>使用宽字符串取一个文件的大小</p></blockquote><blockquote><h3 id="取运行目录w" tabindex="-1"><strong>取运行目录W</strong> <a class="header-anchor" href="#取运行目录w" aria-label="Permalink to &quot;**取运行目录W**&quot;">​</a></h3><p>以宽字符串取程序当前运行目录</p></blockquote><blockquote><h3 id="取执行文件名w" tabindex="-1"><strong>取执行文件名W</strong> <a class="header-anchor" href="#取执行文件名w" aria-label="Permalink to &quot;**取执行文件名W**&quot;">​</a></h3><p>以宽字符串取程序当前文件名</p></blockquote><blockquote><h3 id="取子程序真实地址" tabindex="-1"><strong>取子程序真实地址</strong> <a class="header-anchor" href="#取子程序真实地址" aria-label="Permalink to &quot;**取子程序真实地址**&quot;">​</a></h3><p>取子程序真实内存地址</p></blockquote><blockquote><h3 id="托盘-弹出提示" tabindex="-1"><strong>托盘_弹出提示</strong> <a class="header-anchor" href="#托盘-弹出提示" aria-label="Permalink to &quot;**托盘_弹出提示**&quot;">​</a></h3><p>在托盘图标位置弹出提示框</p></blockquote><blockquote><h3 id="托盘-设置图标" tabindex="-1"><strong>托盘_设置图标</strong> <a class="header-anchor" href="#托盘-设置图标" aria-label="Permalink to &quot;**托盘_设置图标**&quot;">​</a></h3><p>设置当前程序托盘图标</p></blockquote><blockquote><h3 id="文件是否存在w" tabindex="-1"><strong>文件是否存在W</strong> <a class="header-anchor" href="#文件是否存在w" aria-label="Permalink to &quot;**文件是否存在W**&quot;">​</a></h3><p>使用宽字符串判断文件是否存在</p></blockquote><blockquote><h3 id="线程-创建单线程" tabindex="-1"><strong>线程_创建单线程</strong> <a class="header-anchor" href="#线程-创建单线程" aria-label="Permalink to &quot;**线程_创建单线程**&quot;">​</a></h3><p>创建一个单线程</p></blockquote><blockquote><h3 id="线程-销毁" tabindex="-1"><strong>线程_销毁</strong> <a class="header-anchor" href="#线程-销毁" aria-label="Permalink to &quot;**线程_销毁**&quot;">​</a></h3><p>销毁线程并释放句柄</p></blockquote><blockquote><h3 id="写到文件w" tabindex="-1"><strong>写到文件W</strong> <a class="header-anchor" href="#写到文件w" aria-label="Permalink to &quot;**写到文件W**&quot;">​</a></h3><p>使用宽字符串将数据写入到文件，如果文件或目录不存在则自动创建</p></blockquote><blockquote><h3 id="写配置项w" tabindex="-1"><strong>写配置项W</strong> <a class="header-anchor" href="#写配置项w" aria-label="Permalink to &quot;**写配置项W**&quot;">​</a></h3><p>使用宽字符串写配置文件</p></blockquote><blockquote><h3 id="置剪辑板文本w" tabindex="-1"><strong>置剪辑板文本W</strong> <a class="header-anchor" href="#置剪辑板文本w" aria-label="Permalink to &quot;**置剪辑板文本W**&quot;">​</a></h3><p>将宽字符串文本写入剪切板</p></blockquote><blockquote><h3 id="get" tabindex="-1"><strong>__get</strong> <a class="header-anchor" href="#get" aria-label="Permalink to &quot;**__get**&quot;">​</a></h3><p>取指针size_t值</p></blockquote><blockquote><h3 id="get-byte" tabindex="-1"><strong>__get_byte</strong> <a class="header-anchor" href="#get-byte" aria-label="Permalink to &quot;**__get_byte**&quot;">​</a></h3><p>取字节集指针size_t值</p></blockquote><blockquote><h3 id="get-ex" tabindex="-1"><strong>__get_ex</strong> <a class="header-anchor" href="#get-ex" aria-label="Permalink to &quot;**__get_ex**&quot;">​</a></h3><p>取通用型指针size_t值</p></blockquote><blockquote><h3 id="set" tabindex="-1"><strong>__set</strong> <a class="header-anchor" href="#set" aria-label="Permalink to &quot;**__set**&quot;">​</a></h3><p>置指针size_t值</p></blockquote><blockquote><h3 id="set-byte" tabindex="-1"><strong>__set_byte</strong> <a class="header-anchor" href="#set-byte" aria-label="Permalink to &quot;**__set_byte**&quot;">​</a></h3><p>置字节集指针size_t值</p></blockquote><blockquote><h3 id="set-ex" tabindex="-1"><strong>__set_ex</strong> <a class="header-anchor" href="#set-ex" aria-label="Permalink to &quot;**__set_ex**&quot;">​</a></h3><p>置通用型指针size_t值</p></blockquote>',99),n=[l];function h(c,i,s,b,u,q){return a(),t("div",null,n)}const p=o(r,[["render",h]]);export{k as __pageData,p as default};
